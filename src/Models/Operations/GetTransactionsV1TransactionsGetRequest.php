<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace KintsugiTax\SDK\Models\Operations;

use KintsugiTax\SDK\Models\Components;
use KintsugiTax\SDK\Utils\SpeakeasyMetadata;
class GetTransactionsV1TransactionsGetRequest
{
    /**
     * Filter transactions by state code.
     *
     * @var ?string $stateCode
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state_code')]
    public ?string $stateCode = null;

    /**
     * Filter by transaction type (e.g., SALE, FULL_CREDIT_NOTE,
     *
     *         PARTIAL_CREDIT_NOTE, ARCHIVE etc.).
     *
     * @var ?string $transactionType
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=transaction_type')]
    public ?string $transactionType = null;

    /**
     * Filter transactions based on the source.
     *
     * @var ?string $transactionSource
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=transaction_source')]
    public ?string $transactionSource = null;

    /**
     * Search for transactions using a general query
     *
     *         (e.g., order ID, customer name).
     *
     * @var ?string $searchQuery
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=search_query')]
    public ?string $searchQuery = null;

    /**
     * Filter transactions by country code
     *
     *         (ISO 3166-1 alpha-2 format, e.g., US).
     *
     * @var ?array<Components\CountryCodeEnum> $country
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=country')]
    public ?array $country = null;

    /**
     * Filter by full state name (e.g., California).
     *
     * @var ?string $state
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state')]
    public ?string $state = null;

    /**
     * Filter by transaction status (e.g., PENDING, COMMITTED,
     *
     *         CANCELLED, FULLY_REFUNDED, PARTIALLY_REFUNDED, ARCHIVED).
     *
     * @var ?Components\TransactionStatusEnum $status
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=status')]
    public ?Components\TransactionStatusEnum $status = null;

    /**
     * Retrieve transactions linked to a specific filing ID.
     *
     * @var ?string $filingId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filing_id')]
    public ?string $filingId = null;

    /**
     * Retrieve transactions with a date
     *
     *         greater than or equal to (YYYY-MM-DD).
     *
     * @var ?string $dateGte
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=date__gte')]
    public ?string $dateGte = null;

    /**
     * Retrieve transactions with a date
     *
     *         less than or equal to (YYYY-MM-DD).
     *
     * @var ?string $dateLte
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=date__lte')]
    public ?string $dateLte = null;

    /**
     * Filter transactions based on processing status.
     *
     *         Multiple values can be passed as a comma-separated list.
     *
     * @var ?string $processingStatusIn
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=processing_status__in')]
    public ?string $processingStatusIn = null;

    /**
     * Filter transactions by marketplace (e.g., AMAZON, EBAY).
     *
     * @var ?bool $marketplace
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=marketplace')]
    public ?bool $marketplace = null;

    /**
     * Filter transactions by exemption status.
     *
     *         Multiple values can be passed as a comma-separated list (e.g., EXEMPT,TAXABLE).
     *
     * @var ?string $exemptIn
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=exempt__in')]
    public ?string $exemptIn = null;

    /**
     * Filter by address status (e.g., UNVERIFIED, INVALID,
     *
     *         PARTIALLY_VERIFIED, VERIFIED, UNVERIFIABLE).
     *
     * @var ?string $addressStatusIn
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=address_status__in')]
    public ?string $addressStatusIn = null;

    /**
     * Sort results based on specified fields.
     *
     *         Prefix with - for descending order (e.g., -date for newest first).
     *
     * @var ?string $orderBy
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order_by')]
    public ?string $orderBy = null;

    /**
     * Page number
     *
     * @var ?int $page
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;

    /**
     * Page size
     *
     * @var ?int $size
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=size')]
    public ?int $size = null;

    /**
     * @param  ?string  $stateCode
     * @param  ?string  $transactionType
     * @param  ?string  $transactionSource
     * @param  ?string  $searchQuery
     * @param  ?array<Components\CountryCodeEnum>  $country
     * @param  ?string  $state
     * @param  ?string  $addressStatusIn
     * @param  ?Components\TransactionStatusEnum  $status
     * @param  ?string  $filingId
     * @param  ?string  $orderBy
     * @param  ?string  $dateGte
     * @param  ?string  $dateLte
     * @param  ?string  $processingStatusIn
     * @param  ?bool  $marketplace
     * @param  ?string  $exemptIn
     * @param  ?int  $page
     * @param  ?int  $size
     * @phpstan-pure
     */
    public function __construct(?string $stateCode = null, ?string $transactionType = null, ?string $transactionSource = null, ?string $searchQuery = null, ?array $country = null, ?string $state = null, ?Components\TransactionStatusEnum $status = null, ?string $filingId = null, ?string $dateGte = null, ?string $dateLte = null, ?string $processingStatusIn = null, ?bool $marketplace = null, ?string $exemptIn = null, ?string $addressStatusIn = 'UNVERIFIED,INVALID,PARTIALLY_VERIFIED,VERIFIED,UNVERIFIABLE', ?string $orderBy = 'date,state,customer_name,status', ?int $page = 1, ?int $size = 50)
    {
        $this->stateCode = $stateCode;
        $this->transactionType = $transactionType;
        $this->transactionSource = $transactionSource;
        $this->searchQuery = $searchQuery;
        $this->country = $country;
        $this->state = $state;
        $this->status = $status;
        $this->filingId = $filingId;
        $this->dateGte = $dateGte;
        $this->dateLte = $dateLte;
        $this->processingStatusIn = $processingStatusIn;
        $this->marketplace = $marketplace;
        $this->exemptIn = $exemptIn;
        $this->addressStatusIn = $addressStatusIn;
        $this->orderBy = $orderBy;
        $this->page = $page;
        $this->size = $size;
    }
}