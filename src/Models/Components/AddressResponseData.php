<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Components;


class AddressResponseData
{
    /**
     * Primary street address of the customer
     *
     * @var ?string $street1
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('street_1')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $street1 = null;

    /**
     * Additional street address details, such as an apartment or suite number
     *
     * @var ?string $street2
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('street_2')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $street2 = null;

    /**
     * City where the customer resides
     *
     * @var ?string $city
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('city')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $city = null;

    /**
     * County or district of the customer
     *
     * @var ?string $county
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('county')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $county = null;

    /**
     * State or province of the customer
     *
     * @var ?string $state
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('state')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $state = null;

    /**
     * ZIP or Postal code of the customer
     *
     * @var ?string $postalCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('postal_code')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $postalCode = null;

    /**
     * Country code in ISO 3166-1 alpha-2 format
     *
     * @var ?string $country
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('country')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $country = null;

    /**
     * Complete address string of the customer, which can be used as an alternative to individual fields
     *
     * @var ?string $fullAddress
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('full_address')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $fullAddress = null;

    /**
     * @param  ?string  $street1
     * @param  ?string  $street2
     * @param  ?string  $city
     * @param  ?string  $county
     * @param  ?string  $state
     * @param  ?string  $postalCode
     * @param  ?string  $country
     * @param  ?string  $fullAddress
     * @phpstan-pure
     */
    public function __construct(?string $street1 = null, ?string $street2 = null, ?string $city = null, ?string $county = null, ?string $state = null, ?string $postalCode = null, ?string $country = null, ?string $fullAddress = null)
    {
        $this->street1 = $street1;
        $this->street2 = $street2;
        $this->city = $city;
        $this->county = $county;
        $this->state = $state;
        $this->postalCode = $postalCode;
        $this->country = $country;
        $this->fullAddress = $fullAddress;
    }
}