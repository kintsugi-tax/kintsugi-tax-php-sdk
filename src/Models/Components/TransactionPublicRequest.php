<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Components;

use Brick\DateTime\LocalDate;
class TransactionPublicRequest
{
    /**
     * Unique identifier of the organization.
     *
     * @var string $organizationId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('organization_id')]
    public string $organizationId;

    /**
     * External identifier of the transaction.
     *
     * @var string $externalId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('external_id')]
    public string $externalId;

    /**
     * Transaction date and time
     *
     * @var \DateTime $date
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('date')]
    public \DateTime $date;

    /**
     * $addresses
     *
     * @var array<TransactionAddressPublic> $addresses
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('addresses')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\OpenAPI\OpenAPI\Models\Components\TransactionAddressPublic>')]
    public array $addresses;

    /**
     * $transactionItems
     *
     * @var array<TransactionItemBuilder> $transactionItems
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('transaction_items')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\OpenAPI\OpenAPI\Models\Components\TransactionItemBuilder>')]
    public array $transactionItems;

    /**
     *
     * @var CustomerBaseBase|TransactionImportCustomer $customer
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\CustomerBaseBase|\OpenAPI\OpenAPI\Models\Components\TransactionImportCustomer')]
    public CustomerBaseBase|TransactionImportCustomer $customer;

    /**
     *
     * @var TransactionTypeEnum $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\TransactionTypeEnum')]
    public TransactionTypeEnum $type;

    /**
     *
     * @var ?TransactionStatusEnum $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\TransactionStatusEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?TransactionStatusEnum $status = null;

    /**
     * Total amount of the transaction.
     *
     * @var float|string|null $totalAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('total_amount')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $totalAmount = null;

    /**
     * Imported tax amount.
     *
     * @var float|string|null $totalTaxAmountImported
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('total_tax_amount_imported')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $totalTaxAmountImported = null;

    /**
     * Imported tax rate.
     *
     * @var float|string|null $taxRateImported
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_rate_imported')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $taxRateImported = null;

    /**
     * Calculated tax amount.
     *
     * @var float|string|null $totalTaxAmountCalculated
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('total_tax_amount_calculated')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $totalTaxAmountCalculated = null;

    /**
     * Calculated tax rate.
     *
     * @var float|string|null $taxRateCalculated
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_rate_calculated')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $taxRateCalculated = null;

    /**
     * Total tax liability amount.
     *
     * @var float|string|null $totalTaxLiabilityAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('total_tax_liability_amount')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $totalTaxLiabilityAmount = null;

    /**
     * Taxable amount.
     *
     * @var float|string|null $taxableAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('taxable_amount')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $taxableAmount = null;

    /**
     *
     * @var ?CurrencyEnum $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\CurrencyEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CurrencyEnum $currency = null;

    /**
     *
     * @var ?SourceEnum $source
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('source')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\SourceEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?SourceEnum $source = null;

    /**
     * Indicates if transaction requires tax exemption.
     *
     * @var ?ExemptionRequired $requiresExemption
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('requires_exemption')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\ExemptionRequired|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ExemptionRequired $requiresExemption = null;

    /**
     * Transaction date in the shop's local timezone
     *
     * @var ?LocalDate $shopDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('shop_date')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?LocalDate $shopDate = null;

    /**
     * Timezone of the shop
     *
     * @var ?string $shopDateTz
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('shop_date_tz')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $shopDateTz = null;

    /**
     * Description of the transaction.
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * Status of refund, if applicable
     *
     * @var ?TransactionRefundStatus $refundStatus
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('refund_status')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\TransactionRefundStatus|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?TransactionRefundStatus $refundStatus = null;

    /**
     * Unique identifier of the customer.
     *
     * @var ?string $customerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $customerId = null;

    /**
     * Indicates if transaction is marketplace-based.
     *
     * @var ?bool $marketplace
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('marketplace')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $marketplace = null;

    /**
     * Exemption status (e.g., NOT_EXEMPT)
     *
     * @var ?TransactionExemptStatusEnum $exempt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('exempt')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\TransactionExemptStatusEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?TransactionExemptStatusEnum $exempt = null;

    /**
     * List of exemptions applied (if any).
     *
     * @var ?array<Exemption> $exemptions
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('exemptions')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\OpenAPI\OpenAPI\Models\Components\Exemption>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $exemptions = null;

    /**
     * Related transaction identifier.
     *
     * @var ?string $relatedTo
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('related_to')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $relatedTo = null;

    /**
     * Secondary External Identifier.
     *
     * @var ?string $secondaryExternalId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('secondary_external_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $secondaryExternalId = null;

    /**
     * Secondary source information
     *
     * @var ?string $secondarySource
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('secondary_source')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $secondarySource = null;

    /**
     * Friendly identifier of the original item.
     *
     * @var ?string $externalFriendlyId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('external_friendly_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $externalFriendlyId = null;

    /**
     * Source of tax liability.
     *
     * @var ?TaxLiabilitySourceEnum $taxLiabilitySource
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_liability_source')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\TaxLiabilitySourceEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?TaxLiabilitySourceEnum $taxLiabilitySource = null;

    /**
     * Connection Identifier
     *
     * @var ?string $connectionId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('connection_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $connectionId = null;

    /**
     * Filing identifier.
     *
     * @var ?string $filingId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('filing_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $filingId = null;

    /**
     * City of the transaction address.
     *
     * @var ?string $city
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('city')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $city = null;

    /**
     * County of the transaction address.
     *
     * @var ?string $county
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('county')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $county = null;

    /**
     * State of the transaction address.
     *
     * @var ?string $state
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('state')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $state = null;

    /**
     * Country code (ISO Alpha-2).
     *
     * @var ?CountryCodeEnum $country
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('country')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\CountryCodeEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CountryCodeEnum $country = null;

    /**
     * Postal code of the transaction.
     *
     * @var ?string $postalCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('postal_code')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $postalCode = null;

    /**
     * Tax ID associated with the transaction
     *
     * @var ?string $taxId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $taxId = null;

    /**
     * Transaction lock status.
     *
     * @var ?bool $locked
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('locked')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $locked = null;

    /**
     * @param  string  $organizationId
     * @param  string  $externalId
     * @param  \DateTime  $date
     * @param  array<TransactionAddressPublic>  $addresses
     * @param  array<TransactionItemBuilder>  $transactionItems
     * @param  CustomerBaseBase|TransactionImportCustomer  $customer
     * @param  TransactionTypeEnum  $type
     * @param  ?TransactionStatusEnum  $status
     * @param  float|string|null  $totalAmount
     * @param  float|string|null  $totalTaxAmountImported
     * @param  float|string|null  $taxRateImported
     * @param  float|string|null  $totalTaxAmountCalculated
     * @param  float|string|null  $taxRateCalculated
     * @param  float|string|null  $totalTaxLiabilityAmount
     * @param  float|string|null  $taxableAmount
     * @param  ?CurrencyEnum  $currency
     * @param  ?bool  $locked
     * @param  ?SourceEnum  $source
     * @param  ?ExemptionRequired  $requiresExemption
     * @param  ?LocalDate  $shopDate
     * @param  ?string  $shopDateTz
     * @param  ?string  $description
     * @param  ?TransactionRefundStatus  $refundStatus
     * @param  ?string  $customerId
     * @param  ?bool  $marketplace
     * @param  ?TransactionExemptStatusEnum  $exempt
     * @param  ?array<Exemption>  $exemptions
     * @param  ?string  $relatedTo
     * @param  ?string  $secondaryExternalId
     * @param  ?string  $secondarySource
     * @param  ?string  $externalFriendlyId
     * @param  ?TaxLiabilitySourceEnum  $taxLiabilitySource
     * @param  ?string  $connectionId
     * @param  ?string  $filingId
     * @param  ?string  $city
     * @param  ?string  $county
     * @param  ?string  $state
     * @param  ?CountryCodeEnum  $country
     * @param  ?string  $postalCode
     * @param  ?string  $taxId
     * @phpstan-pure
     */
    public function __construct(string $organizationId, string $externalId, \DateTime $date, array $addresses, array $transactionItems, CustomerBaseBase|TransactionImportCustomer $customer, TransactionTypeEnum $type, ?TransactionStatusEnum $status = null, float|string|null $totalAmount = null, float|string|null $totalTaxAmountImported = null, float|string|null $taxRateImported = null, float|string|null $totalTaxAmountCalculated = null, float|string|null $taxRateCalculated = null, float|string|null $totalTaxLiabilityAmount = null, float|string|null $taxableAmount = null, ?CurrencyEnum $currency = null, ?SourceEnum $source = null, ?ExemptionRequired $requiresExemption = null, ?LocalDate $shopDate = null, ?string $shopDateTz = null, ?string $description = null, ?TransactionRefundStatus $refundStatus = null, ?string $customerId = null, ?bool $marketplace = null, ?TransactionExemptStatusEnum $exempt = null, ?array $exemptions = null, ?string $relatedTo = null, ?string $secondaryExternalId = null, ?string $secondarySource = null, ?string $externalFriendlyId = null, ?TaxLiabilitySourceEnum $taxLiabilitySource = null, ?string $connectionId = null, ?string $filingId = null, ?string $city = null, ?string $county = null, ?string $state = null, ?CountryCodeEnum $country = null, ?string $postalCode = null, ?string $taxId = null, ?bool $locked = false)
    {
        $this->organizationId = $organizationId;
        $this->externalId = $externalId;
        $this->date = $date;
        $this->addresses = $addresses;
        $this->transactionItems = $transactionItems;
        $this->customer = $customer;
        $this->type = $type;
        $this->status = $status;
        $this->totalAmount = $totalAmount;
        $this->totalTaxAmountImported = $totalTaxAmountImported;
        $this->taxRateImported = $taxRateImported;
        $this->totalTaxAmountCalculated = $totalTaxAmountCalculated;
        $this->taxRateCalculated = $taxRateCalculated;
        $this->totalTaxLiabilityAmount = $totalTaxLiabilityAmount;
        $this->taxableAmount = $taxableAmount;
        $this->currency = $currency;
        $this->source = $source;
        $this->requiresExemption = $requiresExemption;
        $this->shopDate = $shopDate;
        $this->shopDateTz = $shopDateTz;
        $this->description = $description;
        $this->refundStatus = $refundStatus;
        $this->customerId = $customerId;
        $this->marketplace = $marketplace;
        $this->exempt = $exempt;
        $this->exemptions = $exemptions;
        $this->relatedTo = $relatedTo;
        $this->secondaryExternalId = $secondaryExternalId;
        $this->secondarySource = $secondarySource;
        $this->externalFriendlyId = $externalFriendlyId;
        $this->taxLiabilitySource = $taxLiabilitySource;
        $this->connectionId = $connectionId;
        $this->filingId = $filingId;
        $this->city = $city;
        $this->county = $county;
        $this->state = $state;
        $this->country = $country;
        $this->postalCode = $postalCode;
        $this->taxId = $taxId;
        $this->locked = $locked;
    }
}