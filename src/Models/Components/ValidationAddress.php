<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace KintsugiTax\SDK\Models\Components;


class ValidationAddress
{
    /**
     * Primary address line, such as street name and number
     *
     * @var ?string $line1
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('line1')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $line1 = null;

    /**
     * Additional address details, such as an apartment or suite number
     *
     * @var ?string $line2
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('line2')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $line2 = null;

    /**
     * Additional address details for complex addresses
     *
     * @var ?string $line3
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('line3')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $line3 = null;

    /**
     * The city or town name for the address
     *
     * @var ?string $city
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('city')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $city = null;

    /**
     * State, province, or region of the address
     *
     * @var ?string $state
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('state')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $state = null;

    /**
     * Country code in ISO 3166-1 alpha-2 format (e.g., 'US' for the United States).
     *
     *         Defaults to 'US'.
     *         should not be empty. Not validating here as the validation
     *         structure can be different for different providers
     *
     * @var ?string $country
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('country')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $country = null;

    /**
     * ZIP or postal code for the address. Can be empty for some locales.
     *
     *         Not validating here as the validation structure can be different for different providers
     *
     * @var ?string $postalCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('postalCode')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $postalCode = null;

    /**
     * Unique identifier for the request, if applicable
     *
     * @var ?int $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $id = null;

    /**
     * County or district name for the address
     *
     * @var ?string $county
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('county')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $county = null;

    /**
     * A complete address string that can be used as an alternative to providing individual fields.
     *
     * @var ?string $fullAddress
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('full_address')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $fullAddress = null;

    /**
     * @param  ?string  $line1
     * @param  ?string  $line2
     * @param  ?string  $line3
     * @param  ?string  $city
     * @param  ?string  $state
     * @param  ?string  $country
     * @param  ?string  $postalCode
     * @param  ?int  $id
     * @param  ?string  $county
     * @param  ?string  $fullAddress
     * @phpstan-pure
     */
    public function __construct(?string $line1 = null, ?string $line2 = null, ?string $line3 = null, ?string $city = null, ?string $state = null, ?string $country = null, ?string $postalCode = null, ?int $id = null, ?string $county = null, ?string $fullAddress = null)
    {
        $this->line1 = $line1;
        $this->line2 = $line2;
        $this->line3 = $line3;
        $this->city = $city;
        $this->state = $state;
        $this->country = $country;
        $this->postalCode = $postalCode;
        $this->id = $id;
        $this->county = $county;
        $this->fullAddress = $fullAddress;
    }
}