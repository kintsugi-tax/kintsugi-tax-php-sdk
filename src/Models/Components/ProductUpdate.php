<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace KintsugiTax\SDK\Models\Components;


class ProductUpdate
{
    /**
     * Name of the product.
     *
     * @var string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public string $name;

    /**
     *
     * @var ProductCategoryEnum $productCategory
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_category')]
    #[\Speakeasy\Serializer\Annotation\Type('\KintsugiTax\SDK\Models\Components\ProductCategoryEnum')]
    public ProductCategoryEnum $productCategory;

    /**
     *
     * @var ProductSubCategoryEnum $productSubcategory
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_subcategory')]
    #[\Speakeasy\Serializer\Annotation\Type('\KintsugiTax\SDK\Models\Components\ProductSubCategoryEnum')]
    public ProductSubCategoryEnum $productSubcategory;

    /**
     * Indicates whether the product is tax-exempt.
     *
     * @var bool $taxExempt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_exempt')]
    public bool $taxExempt;

    /**
     *
     * @var ?ProductStatusEnum $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\KintsugiTax\SDK\Models\Components\ProductStatusEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ProductStatusEnum $status = null;

    /**
     * The unique identifier of the product to be updated.
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * External identifier provided for the product,
     *
     *         typically by the source system.
     *
     * @var ?string $externalId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('external_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $externalId = null;

    /**
     * $sku
     *
     * @var ?array<string> $sku
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('sku')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $sku = null;

    /**
     * Description of the product.
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * Indicates if the product classification failed.
     *
     * @var ?bool $classificationFailed
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('classification_failed')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $classificationFailed = null;

    /**
     * @param  string  $name
     * @param  ProductCategoryEnum  $productCategory
     * @param  ProductSubCategoryEnum  $productSubcategory
     * @param  bool  $taxExempt
     * @param  ?ProductStatusEnum  $status
     * @param  ?string  $id
     * @param  ?string  $externalId
     * @param  ?array<string>  $sku
     * @param  ?string  $description
     * @param  ?bool  $classificationFailed
     * @phpstan-pure
     */
    public function __construct(string $name, ProductCategoryEnum $productCategory, ProductSubCategoryEnum $productSubcategory, bool $taxExempt, ?ProductStatusEnum $status = null, ?string $id = null, ?string $externalId = null, ?array $sku = null, ?string $description = null, ?bool $classificationFailed = null)
    {
        $this->name = $name;
        $this->productCategory = $productCategory;
        $this->productSubcategory = $productSubcategory;
        $this->taxExempt = $taxExempt;
        $this->status = $status;
        $this->id = $id;
        $this->externalId = $externalId;
        $this->sku = $sku;
        $this->description = $description;
        $this->classificationFailed = $classificationFailed;
    }
}