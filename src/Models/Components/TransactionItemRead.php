<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Components;


class TransactionItemRead
{
    /**
     * Date/time of item.
     *
     * @var \DateTime $date
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('date')]
    public \DateTime $date;

    /**
     * External product identifier.
     *
     * @var string $externalProductId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('external_product_id')]
    public string $externalProductId;

    /**
     * The unique transaction item identifier.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * List of tax items associated with the transaction item.
     *
     * @var array<TaxItemRead> $taxItems
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_items')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\OpenAPI\OpenAPI\Models\Components\TaxItemRead>')]
    public array $taxItems;

    /**
     * Organization identifier.
     *
     * @var ?string $organizationId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('organization_id')]
    public ?string $organizationId;

    /**
     * External item identifier.
     *
     * @var ?string $externalId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('external_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $externalId = null;

    /**
     * Item description
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * Product name
     *
     * @var ?string $product
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $product = null;

    /**
     * Product identifier.
     *
     * @var ?string $productId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $productId = null;

    /**
     * Product name (detailed)
     *
     * @var ?string $productName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $productName = null;

    /**
     * Product description
     *
     * @var ?string $productDescription
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $productDescription = null;

    /**
     * Original currency code.
     *
     * @var ?CurrencyEnum $originalCurrency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('original_currency')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\CurrencyEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CurrencyEnum $originalCurrency = null;

    /**
     * Destination currency code.
     *
     * @var ?CurrencyEnum $destinationCurrency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('destination_currency')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\CurrencyEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CurrencyEnum $destinationCurrency = null;

    /**
     * Converted item amount.
     *
     * @var ?string $convertedAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('converted_amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $convertedAmount = null;

    /**
     * Converted taxable amount.
     *
     * @var ?string $convertedTaxableAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('converted_taxable_amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $convertedTaxableAmount = null;

    /**
     * Converted imported tax amount.
     *
     * @var ?string $convertedTaxAmountImported
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('converted_tax_amount_imported')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $convertedTaxAmountImported = null;

    /**
     * Converted calculated tax amount
     *
     * @var ?string $convertedTaxAmountCalculated
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('converted_tax_amount_calculated')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $convertedTaxAmountCalculated = null;

    /**
     * Converted total discount amount.
     *
     * @var ?string $convertedTotalDiscount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('converted_total_discount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $convertedTotalDiscount = null;

    /**
     * Converted subtotal amount.
     *
     * @var ?string $convertedSubtotal
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('converted_subtotal')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $convertedSubtotal = null;

    /**
     * Tax exemption status.
     *
     * @var ?TaxExemptionEnum $taxExemption
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_exemption')]
    #[\Speakeasy\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Components\TaxExemptionEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?TaxExemptionEnum $taxExemption = null;

    /**
     * Total discount amount applied to this transaction item.
     *
     * @var ?string $totalDiscount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('total_discount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $totalDiscount = null;

    /**
     * Subtotal amount before any discount is applied.
     *
     * @var ?string $subtotal
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subtotal')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $subtotal = null;

    /**
     * Quantity of item.
     *
     * @var ?string $quantity
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('quantity')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $quantity = null;

    /**
     * Item amount.
     *
     * @var ?string $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $amount = null;

    /**
     * Imported tax amount for the item.
     *
     * @var ?string $taxAmountImported
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_amount_imported')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $taxAmountImported = null;

    /**
     * Imported tax rate.
     *
     * @var ?string $taxRateImported
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_rate_imported')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $taxRateImported = null;

    /**
     * Calculated tax amount for the item.
     *
     * @var ?string $taxAmountCalculated
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_amount_calculated')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $taxAmountCalculated = null;

    /**
     * Calculated tax rate.
     *
     * @var ?string $taxRateCalculated
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_rate_calculated')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $taxRateCalculated = null;

    /**
     * Taxable amount for the item.
     *
     * @var ?string $taxableAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('taxable_amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $taxableAmount = null;

    /**
     * Indicates if the item is exempt.
     *
     * @var ?bool $exempt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('exempt')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $exempt = null;

    /**
     * @param  \DateTime  $date
     * @param  string  $externalProductId
     * @param  string  $id
     * @param  array<TaxItemRead>  $taxItems
     * @param  ?string  $organizationId
     * @param  ?string  $quantity
     * @param  ?string  $amount
     * @param  ?string  $taxAmountImported
     * @param  ?string  $taxRateImported
     * @param  ?string  $taxAmountCalculated
     * @param  ?string  $taxRateCalculated
     * @param  ?string  $taxableAmount
     * @param  ?bool  $exempt
     * @param  ?string  $externalId
     * @param  ?string  $description
     * @param  ?string  $product
     * @param  ?string  $productId
     * @param  ?string  $productName
     * @param  ?string  $productDescription
     * @param  ?CurrencyEnum  $originalCurrency
     * @param  ?CurrencyEnum  $destinationCurrency
     * @param  ?string  $convertedAmount
     * @param  ?string  $convertedTaxableAmount
     * @param  ?string  $convertedTaxAmountImported
     * @param  ?string  $convertedTaxAmountCalculated
     * @param  ?string  $convertedTotalDiscount
     * @param  ?string  $convertedSubtotal
     * @param  ?TaxExemptionEnum  $taxExemption
     * @param  ?string  $totalDiscount
     * @param  ?string  $subtotal
     * @phpstan-pure
     */
    public function __construct(\DateTime $date, string $externalProductId, string $id, array $taxItems, ?string $organizationId = null, ?string $externalId = null, ?string $description = null, ?string $product = null, ?string $productId = null, ?string $productName = null, ?string $productDescription = null, ?CurrencyEnum $originalCurrency = null, ?CurrencyEnum $destinationCurrency = null, ?string $convertedAmount = null, ?string $convertedTaxableAmount = null, ?string $convertedTaxAmountImported = null, ?string $convertedTaxAmountCalculated = null, ?string $convertedTotalDiscount = null, ?string $convertedSubtotal = null, ?TaxExemptionEnum $taxExemption = null, ?string $totalDiscount = null, ?string $subtotal = null, ?string $quantity = '1.0', ?string $amount = '0.00', ?string $taxAmountImported = '0.00', ?string $taxRateImported = '0.00', ?string $taxAmountCalculated = '0.00', ?string $taxRateCalculated = '0.00', ?string $taxableAmount = '0.00', ?bool $exempt = false)
    {
        $this->date = $date;
        $this->externalProductId = $externalProductId;
        $this->id = $id;
        $this->taxItems = $taxItems;
        $this->organizationId = $organizationId;
        $this->externalId = $externalId;
        $this->description = $description;
        $this->product = $product;
        $this->productId = $productId;
        $this->productName = $productName;
        $this->productDescription = $productDescription;
        $this->originalCurrency = $originalCurrency;
        $this->destinationCurrency = $destinationCurrency;
        $this->convertedAmount = $convertedAmount;
        $this->convertedTaxableAmount = $convertedTaxableAmount;
        $this->convertedTaxAmountImported = $convertedTaxAmountImported;
        $this->convertedTaxAmountCalculated = $convertedTaxAmountCalculated;
        $this->convertedTotalDiscount = $convertedTotalDiscount;
        $this->convertedSubtotal = $convertedSubtotal;
        $this->taxExemption = $taxExemption;
        $this->totalDiscount = $totalDiscount;
        $this->subtotal = $subtotal;
        $this->quantity = $quantity;
        $this->amount = $amount;
        $this->taxAmountImported = $taxAmountImported;
        $this->taxRateImported = $taxRateImported;
        $this->taxAmountCalculated = $taxAmountCalculated;
        $this->taxRateCalculated = $taxRateCalculated;
        $this->taxableAmount = $taxableAmount;
        $this->exempt = $exempt;
    }
}