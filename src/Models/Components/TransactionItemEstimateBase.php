<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace KintsugiTax\SDK\Models\Components;


class TransactionItemEstimateBase
{
    /**
     * The date of the transaction item.
     *
     * @var \DateTime $date
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('date')]
    public \DateTime $date;

    /**
     * The total amount of the item.
     *
     * @var float|string $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string')]
    public float|string $amount;

    /**
     * Defaults to 1.0. The quantity of the item.
     *
     * @var float|string|null $quantity
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('quantity')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $quantity = null;

    /**
     * A unique identifier for the transaction item.
     *
     * @var ?string $externalId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('external_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $externalId = null;

    /**
     * A description of the item.
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * External product identifier. If not found and product_subcategory
     *
     *         and product_category are not provided, an error occurs.
     *
     * @var ?string $externalProductId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('external_product_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $externalProductId = null;

    /**
     * Name of the product. Used if creating a new product.
     *
     * @var ?string $productName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $productName = null;

    /**
     * Description of the product. Used if creating a new product.
     *
     * @var ?string $productDescription
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $productDescription = null;

    /**
     *
     * @var ?SourceEnum $productSource
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_source')]
    #[\Speakeasy\Serializer\Annotation\Type('\KintsugiTax\SDK\Models\Components\SourceEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?SourceEnum $productSource = null;

    /**
     * Subcategory of the product. Required if product_category is used
     *
     *         in place of external_product_id.
     *
     * @var ?ProductSubCategoryEnum $productSubcategory
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_subcategory')]
    #[\Speakeasy\Serializer\Annotation\Type('\KintsugiTax\SDK\Models\Components\ProductSubCategoryEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ProductSubCategoryEnum $productSubcategory = null;

    /**
     * Category of the product. Required if product_subcategory is used
     *
     *         in place of external_product_id.
     *
     * @var ?ProductCategoryEnum $productCategory
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_category')]
    #[\Speakeasy\Serializer\Annotation\Type('\KintsugiTax\SDK\Models\Components\ProductCategoryEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ProductCategoryEnum $productCategory = null;

    /**
     * Defaults to false. Indicates whether the item is exempt from tax.
     *
     * @var ?bool $exempt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('exempt')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $exempt = null;

    /**
     * @param  \DateTime  $date
     * @param  float|string  $amount
     * @param  float|string|null  $quantity
     * @param  ?bool  $exempt
     * @param  ?string  $externalId
     * @param  ?string  $description
     * @param  ?string  $externalProductId
     * @param  ?string  $productName
     * @param  ?string  $productDescription
     * @param  ?SourceEnum  $productSource
     * @param  ?ProductSubCategoryEnum  $productSubcategory
     * @param  ?ProductCategoryEnum  $productCategory
     * @phpstan-pure
     */
    public function __construct(\DateTime $date, float|string $amount, float|string|null $quantity = null, ?string $externalId = null, ?string $description = null, ?string $externalProductId = null, ?string $productName = null, ?string $productDescription = null, ?SourceEnum $productSource = null, ?ProductSubCategoryEnum $productSubcategory = null, ?ProductCategoryEnum $productCategory = null, ?bool $exempt = false)
    {
        $this->date = $date;
        $this->amount = $amount;
        $this->quantity = $quantity;
        $this->externalId = $externalId;
        $this->description = $description;
        $this->externalProductId = $externalProductId;
        $this->productName = $productName;
        $this->productDescription = $productDescription;
        $this->productSource = $productSource;
        $this->productSubcategory = $productSubcategory;
        $this->productCategory = $productCategory;
        $this->exempt = $exempt;
    }
}