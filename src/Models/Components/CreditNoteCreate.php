<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace KintsugiTax\SDK\Models\Components;


class CreditNoteCreate
{
    /**
     * Unique identifier for the credit note in the external system.
     *
     * @var string $externalId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('external_id')]
    public string $externalId;

    /**
     * Date when the credit note was issued or created.
     *
     * @var \DateTime $date
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('date')]
    public \DateTime $date;

    /**
     * Current state of the credit note in its lifecycle.
     *
     * @var Status $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\KintsugiTax\SDK\Models\Components\Status')]
    public Status $status;

    /**
     *
     * @var CurrencyEnum $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    #[\Speakeasy\Serializer\Annotation\Type('\KintsugiTax\SDK\Models\Components\CurrencyEnum')]
    public CurrencyEnum $currency;

    /**
     * Detailed list of individual items included in this credit note.
     *
     * @var array<CreditNoteItemCreateUpdate> $transactionItems
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('transaction_items')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\KintsugiTax\SDK\Models\Components\CreditNoteItemCreateUpdate>')]
    public array $transactionItems;

    /**
     * Total monetary value of the credit note, including all items and taxes.
     *
     * @var float|string|null $totalAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('total_amount')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $totalAmount = null;

    /**
     * Brief explanation or reason for issuing the credit note.
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * Indicates whether this credit note is associated with a marketplace transaction.
     *
     * @var ?bool $marketplace
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('marketplace')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $marketplace = null;

    /**
     * Pre-calculated total tax amount for the entire credit note, if provided by the external system.
     *
     * @var float|string|null $taxAmountImported
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_amount_imported')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $taxAmountImported = null;

    /**
     * Pre-calculated overall tax rate for the credit note, if provided by the external system.
     *
     * @var float|string|null $taxRateImported
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_rate_imported')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $taxRateImported = null;

    /**
     * Total portion of the credit note amount subject to taxation.
     *
     * @var float|string|null $taxableAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('taxable_amount')]
    #[\Speakeasy\Serializer\Annotation\Type('float|string|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public float|string|null $taxableAmount = null;

    /**
     * A list of TransactionAddressBuilder objects or None if no addresses are provided. This field represents the addresses associated with the transaction.
     *
     * @var ?array<TransactionAddressBuilder> $addresses
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('addresses')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\KintsugiTax\SDK\Models\Components\TransactionAddressBuilder>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $addresses = null;

    /**
     * @param  string  $externalId
     * @param  \DateTime  $date
     * @param  Status  $status
     * @param  CurrencyEnum  $currency
     * @param  array<CreditNoteItemCreateUpdate>  $transactionItems
     * @param  float|string|null  $totalAmount
     * @param  ?string  $description
     * @param  ?bool  $marketplace
     * @param  float|string|null  $taxAmountImported
     * @param  float|string|null  $taxRateImported
     * @param  float|string|null  $taxableAmount
     * @param  ?array<TransactionAddressBuilder>  $addresses
     * @phpstan-pure
     */
    public function __construct(string $externalId, \DateTime $date, Status $status, CurrencyEnum $currency, array $transactionItems, float|string|null $totalAmount = null, ?string $description = null, ?bool $marketplace = null, float|string|null $taxAmountImported = null, float|string|null $taxRateImported = null, float|string|null $taxableAmount = null, ?array $addresses = null)
    {
        $this->externalId = $externalId;
        $this->date = $date;
        $this->status = $status;
        $this->currency = $currency;
        $this->transactionItems = $transactionItems;
        $this->totalAmount = $totalAmount;
        $this->description = $description;
        $this->marketplace = $marketplace;
        $this->taxAmountImported = $taxAmountImported;
        $this->taxRateImported = $taxRateImported;
        $this->taxableAmount = $taxableAmount;
        $this->addresses = $addresses;
    }
}